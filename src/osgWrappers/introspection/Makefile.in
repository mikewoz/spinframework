# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src/osgWrappers/introspection
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/ax_check_gl.m4 \
	$(top_srcdir)/m4/ax_check_glu.m4 \
	$(top_srcdir)/m4/ax_check_glut.m4 \
	$(top_srcdir)/m4/ax_lang_compiler_ms.m4 \
	$(top_srcdir)/m4/boost.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/wxwin.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libSPINwrappers_la_LIBADD =
am_libSPINwrappers_la_OBJECTS = libSPINwrappers_la-AnimationNode.lo \
	libSPINwrappers_la-AttractorNode.lo \
	libSPINwrappers_la-ConstraintsNode.lo \
	libSPINwrappers_la-Contour.lo libSPINwrappers_la-DSPNode.lo \
	libSPINwrappers_la-Fog.lo libSPINwrappers_la-GeometryNode.lo \
	libSPINwrappers_la-GridNode.lo libSPINwrappers_la-GroupNode.lo \
	libSPINwrappers_la-ImageTexture.lo \
	libSPINwrappers_la-LightSource.lo \
	libSPINwrappers_la-Listener.lo \
	libSPINwrappers_la-MeasurementNode.lo \
	libSPINwrappers_la-Menu3D.lo libSPINwrappers_la-ModelNode.lo \
	libSPINwrappers_la-ParticleSystem.lo \
	libSPINwrappers_la-PointerNode.lo \
	libSPINwrappers_la-RayNode.lo \
	libSPINwrappers_la-ReferencedNode.lo \
	libSPINwrappers_la-ReferencedStateSet.lo \
	libSPINwrappers_la-ReporterNode.lo \
	libSPINwrappers_la-Shader.lo libSPINwrappers_la-ShapeNode.lo \
	libSPINwrappers_la-SharedVideoTexture.lo \
	libSPINwrappers_la-SoundConnection.lo \
	libSPINwrappers_la-SoundNode.lo \
	libSPINwrappers_la-SoundSpace.lo \
	libSPINwrappers_la-SwitchNode.lo \
	libSPINwrappers_la-TextNode.lo libSPINwrappers_la-UserNode.lo \
	libSPINwrappers_la-VideoTexture.lo
libSPINwrappers_la_OBJECTS = $(am_libSPINwrappers_la_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libSPINwrappers_la_SOURCES)
DIST_SOURCES = $(libSPINwrappers_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_FILESYSTEM_LDFLAGS = @BOOST_FILESYSTEM_LDFLAGS@
BOOST_FILESYSTEM_LDPATH = @BOOST_FILESYSTEM_LDPATH@
BOOST_FILESYSTEM_LIBS = @BOOST_FILESYSTEM_LIBS@
BOOST_LDPATH = @BOOST_LDPATH@
BOOST_PROGRAM_OPTIONS_LDFLAGS = @BOOST_PROGRAM_OPTIONS_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LDPATH = @BOOST_PROGRAM_OPTIONS_LDPATH@
BOOST_PROGRAM_OPTIONS_LIBS = @BOOST_PROGRAM_OPTIONS_LIBS@
BOOST_PYTHON_CPPFLAGS = @BOOST_PYTHON_CPPFLAGS@
BOOST_PYTHON_LDFLAGS = @BOOST_PYTHON_LDFLAGS@
BOOST_PYTHON_LDPATH = @BOOST_PYTHON_LDPATH@
BOOST_PYTHON_LIBS = @BOOST_PYTHON_LIBS@
BOOST_REGEX_LDFLAGS = @BOOST_REGEX_LDFLAGS@
BOOST_REGEX_LDPATH = @BOOST_REGEX_LDPATH@
BOOST_REGEX_LIBS = @BOOST_REGEX_LIBS@
BOOST_ROOT = @BOOST_ROOT@
BOOST_SYSTEM_LDFLAGS = @BOOST_SYSTEM_LDFLAGS@
BOOST_SYSTEM_LDPATH = @BOOST_SYSTEM_LDPATH@
BOOST_SYSTEM_LIBS = @BOOST_SYSTEM_LIBS@
BULLET_CFLAGS = @BULLET_CFLAGS@
BULLET_LIBS = @BULLET_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPPINTROSPECTION_CFLAGS = @CPPINTROSPECTION_CFLAGS@
CPPINTROSPECTION_LIBS = @CPPINTROSPECTION_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GLUT_CFLAGS = @GLUT_CFLAGS@
GLUT_LIBS = @GLUT_LIBS@
GLU_CFLAGS = @GLU_CFLAGS@
GLU_LIBS = @GLU_LIBS@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GREP = @GREP@
HELP2MAN = @HELP2MAN@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBLO_CFLAGS = @LIBLO_CFLAGS@
LIBLO_LIBS = @LIBLO_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
LIBXML2_LIBS = @LIBXML2_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENTHREADS_CFLAGS = @OPENTHREADS_CFLAGS@
OPENTHREADS_LIBS = @OPENTHREADS_LIBS@
OSG_CFLAGS = @OSG_CFLAGS@
OSG_LIBS = @OSG_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POCO_LIBS = @POCO_LIBS@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHAREDVIDEO_CFLAGS = @SHAREDVIDEO_CFLAGS@
SHAREDVIDEO_LIBS = @SHAREDVIDEO_LIBS@
SHELL = @SHELL@
SPATOSC_CFLAGS = @SPATOSC_CFLAGS@
SPATOSC_LIBS = @SPATOSC_LIBS@
SPIN_API_VERSION = @SPIN_API_VERSION@
SPIN_API_VERSION_AM = @SPIN_API_VERSION_AM@
SPIN_LT_VERSION = @SPIN_LT_VERSION@
SPIN_MAJOR_VERSION = @SPIN_MAJOR_VERSION@
SPIN_MICRO_VERSION = @SPIN_MICRO_VERSION@
SPIN_MINOR_VERSION = @SPIN_MINOR_VERSION@
SPIN_RELEASE_STATUS = @SPIN_RELEASE_STATUS@
SPIN_VERSION = @SPIN_VERSION@
STRIP = @STRIP@
VERSION = @VERSION@
WX_CFLAGS = @WX_CFLAGS@
WX_CFLAGS_ONLY = @WX_CFLAGS_ONLY@
WX_CONFIG_PATH = @WX_CONFIG_PATH@
WX_CPPFLAGS = @WX_CPPFLAGS@
WX_CXXFLAGS = @WX_CXXFLAGS@
WX_CXXFLAGS_ONLY = @WX_CXXFLAGS_ONLY@
WX_LIBS = @WX_LIBS@
WX_LIBS_STATIC = @WX_LIBS_STATIC@
WX_RESCOMP = @WX_RESCOMP@
WX_VERSION = @WX_VERSION@
XMKMF = @XMKMF@
XML_CFLAGS = @XML_CFLAGS@
XML_LIBS = @XML_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# use noinst_LIBRARIES to create a library that won't be installed
noinst_LTLIBRARIES = libSPINwrappers.la

# please keep those in alphabetical order:
# We only need to wrap the childs of ReferencedNode and ReferencedStateSet:
libSPINwrappers_la_SOURCES = \
    AnimationNode.cpp \
    AttractorNode.cpp \
    ConstraintsNode.cpp \
    Contour.cpp \
    DSPNode.cpp \
    Fog.cpp \
    GeometryNode.cpp \
    GridNode.cpp \
    GroupNode.cpp \
    ImageTexture.cpp \
    LightSource.cpp \
    Listener.cpp \
    MeasurementNode.cpp \
    Menu3D.cpp \
    ModelNode.cpp \
    ParticleSystem.cpp \
    PointerNode.cpp \
    RayNode.cpp \
    ReferencedNode.cpp \
    ReferencedStateSet.cpp \
    ReporterNode.cpp \
    Shader.cpp \
    ShapeNode.cpp \
    SharedVideoTexture.cpp \
    SoundConnection.cpp \
    SoundNode.cpp \
    SoundSpace.cpp \
    SwitchNode.cpp \
    TextNode.cpp \
    UserNode.cpp \
    VideoTexture.cpp

libSPINwrappers_la_CPPFLAGS = \
    $(BOOST_CPPFLAGS) \
    $(CPPINTROSPECTION_CFLAGS) \
    $(OPENTHREADS_CFLAGS) \
    $(PYTHON_CPPFLAGS) \
    $(SPATOSC_CFLAGS) \
    -I$(top_srcdir)/include \
    -I$(top_srcdir)/src/spin \
    -I$(top_srcdir)/src/tinyxml

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/osgWrappers/introspection/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/osgWrappers/introspection/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libSPINwrappers.la: $(libSPINwrappers_la_OBJECTS) $(libSPINwrappers_la_DEPENDENCIES) 
	$(CXXLINK)  $(libSPINwrappers_la_OBJECTS) $(libSPINwrappers_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-AnimationNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-AttractorNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-ConstraintsNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-Contour.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-DSPNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-Fog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-GeometryNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-GridNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-GroupNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-ImageTexture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-LightSource.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-Listener.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-MeasurementNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-Menu3D.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-ModelNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-ParticleSystem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-PointerNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-RayNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-ReferencedNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-ReferencedStateSet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-ReporterNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-Shader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-ShapeNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-SharedVideoTexture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-SoundConnection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-SoundNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-SoundSpace.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-SwitchNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-TextNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-UserNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libSPINwrappers_la-VideoTexture.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libSPINwrappers_la-AnimationNode.lo: AnimationNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-AnimationNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-AnimationNode.Tpo -c -o libSPINwrappers_la-AnimationNode.lo `test -f 'AnimationNode.cpp' || echo '$(srcdir)/'`AnimationNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-AnimationNode.Tpo $(DEPDIR)/libSPINwrappers_la-AnimationNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AnimationNode.cpp' object='libSPINwrappers_la-AnimationNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-AnimationNode.lo `test -f 'AnimationNode.cpp' || echo '$(srcdir)/'`AnimationNode.cpp

libSPINwrappers_la-AttractorNode.lo: AttractorNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-AttractorNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-AttractorNode.Tpo -c -o libSPINwrappers_la-AttractorNode.lo `test -f 'AttractorNode.cpp' || echo '$(srcdir)/'`AttractorNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-AttractorNode.Tpo $(DEPDIR)/libSPINwrappers_la-AttractorNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AttractorNode.cpp' object='libSPINwrappers_la-AttractorNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-AttractorNode.lo `test -f 'AttractorNode.cpp' || echo '$(srcdir)/'`AttractorNode.cpp

libSPINwrappers_la-ConstraintsNode.lo: ConstraintsNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-ConstraintsNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-ConstraintsNode.Tpo -c -o libSPINwrappers_la-ConstraintsNode.lo `test -f 'ConstraintsNode.cpp' || echo '$(srcdir)/'`ConstraintsNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-ConstraintsNode.Tpo $(DEPDIR)/libSPINwrappers_la-ConstraintsNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConstraintsNode.cpp' object='libSPINwrappers_la-ConstraintsNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-ConstraintsNode.lo `test -f 'ConstraintsNode.cpp' || echo '$(srcdir)/'`ConstraintsNode.cpp

libSPINwrappers_la-Contour.lo: Contour.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-Contour.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-Contour.Tpo -c -o libSPINwrappers_la-Contour.lo `test -f 'Contour.cpp' || echo '$(srcdir)/'`Contour.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-Contour.Tpo $(DEPDIR)/libSPINwrappers_la-Contour.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Contour.cpp' object='libSPINwrappers_la-Contour.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-Contour.lo `test -f 'Contour.cpp' || echo '$(srcdir)/'`Contour.cpp

libSPINwrappers_la-DSPNode.lo: DSPNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-DSPNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-DSPNode.Tpo -c -o libSPINwrappers_la-DSPNode.lo `test -f 'DSPNode.cpp' || echo '$(srcdir)/'`DSPNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-DSPNode.Tpo $(DEPDIR)/libSPINwrappers_la-DSPNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DSPNode.cpp' object='libSPINwrappers_la-DSPNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-DSPNode.lo `test -f 'DSPNode.cpp' || echo '$(srcdir)/'`DSPNode.cpp

libSPINwrappers_la-Fog.lo: Fog.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-Fog.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-Fog.Tpo -c -o libSPINwrappers_la-Fog.lo `test -f 'Fog.cpp' || echo '$(srcdir)/'`Fog.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-Fog.Tpo $(DEPDIR)/libSPINwrappers_la-Fog.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fog.cpp' object='libSPINwrappers_la-Fog.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-Fog.lo `test -f 'Fog.cpp' || echo '$(srcdir)/'`Fog.cpp

libSPINwrappers_la-GeometryNode.lo: GeometryNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-GeometryNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-GeometryNode.Tpo -c -o libSPINwrappers_la-GeometryNode.lo `test -f 'GeometryNode.cpp' || echo '$(srcdir)/'`GeometryNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-GeometryNode.Tpo $(DEPDIR)/libSPINwrappers_la-GeometryNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GeometryNode.cpp' object='libSPINwrappers_la-GeometryNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-GeometryNode.lo `test -f 'GeometryNode.cpp' || echo '$(srcdir)/'`GeometryNode.cpp

libSPINwrappers_la-GridNode.lo: GridNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-GridNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-GridNode.Tpo -c -o libSPINwrappers_la-GridNode.lo `test -f 'GridNode.cpp' || echo '$(srcdir)/'`GridNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-GridNode.Tpo $(DEPDIR)/libSPINwrappers_la-GridNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GridNode.cpp' object='libSPINwrappers_la-GridNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-GridNode.lo `test -f 'GridNode.cpp' || echo '$(srcdir)/'`GridNode.cpp

libSPINwrappers_la-GroupNode.lo: GroupNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-GroupNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-GroupNode.Tpo -c -o libSPINwrappers_la-GroupNode.lo `test -f 'GroupNode.cpp' || echo '$(srcdir)/'`GroupNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-GroupNode.Tpo $(DEPDIR)/libSPINwrappers_la-GroupNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GroupNode.cpp' object='libSPINwrappers_la-GroupNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-GroupNode.lo `test -f 'GroupNode.cpp' || echo '$(srcdir)/'`GroupNode.cpp

libSPINwrappers_la-ImageTexture.lo: ImageTexture.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-ImageTexture.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-ImageTexture.Tpo -c -o libSPINwrappers_la-ImageTexture.lo `test -f 'ImageTexture.cpp' || echo '$(srcdir)/'`ImageTexture.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-ImageTexture.Tpo $(DEPDIR)/libSPINwrappers_la-ImageTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ImageTexture.cpp' object='libSPINwrappers_la-ImageTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-ImageTexture.lo `test -f 'ImageTexture.cpp' || echo '$(srcdir)/'`ImageTexture.cpp

libSPINwrappers_la-LightSource.lo: LightSource.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-LightSource.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-LightSource.Tpo -c -o libSPINwrappers_la-LightSource.lo `test -f 'LightSource.cpp' || echo '$(srcdir)/'`LightSource.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-LightSource.Tpo $(DEPDIR)/libSPINwrappers_la-LightSource.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LightSource.cpp' object='libSPINwrappers_la-LightSource.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-LightSource.lo `test -f 'LightSource.cpp' || echo '$(srcdir)/'`LightSource.cpp

libSPINwrappers_la-Listener.lo: Listener.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-Listener.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-Listener.Tpo -c -o libSPINwrappers_la-Listener.lo `test -f 'Listener.cpp' || echo '$(srcdir)/'`Listener.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-Listener.Tpo $(DEPDIR)/libSPINwrappers_la-Listener.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Listener.cpp' object='libSPINwrappers_la-Listener.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-Listener.lo `test -f 'Listener.cpp' || echo '$(srcdir)/'`Listener.cpp

libSPINwrappers_la-MeasurementNode.lo: MeasurementNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-MeasurementNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-MeasurementNode.Tpo -c -o libSPINwrappers_la-MeasurementNode.lo `test -f 'MeasurementNode.cpp' || echo '$(srcdir)/'`MeasurementNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-MeasurementNode.Tpo $(DEPDIR)/libSPINwrappers_la-MeasurementNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MeasurementNode.cpp' object='libSPINwrappers_la-MeasurementNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-MeasurementNode.lo `test -f 'MeasurementNode.cpp' || echo '$(srcdir)/'`MeasurementNode.cpp

libSPINwrappers_la-Menu3D.lo: Menu3D.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-Menu3D.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-Menu3D.Tpo -c -o libSPINwrappers_la-Menu3D.lo `test -f 'Menu3D.cpp' || echo '$(srcdir)/'`Menu3D.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-Menu3D.Tpo $(DEPDIR)/libSPINwrappers_la-Menu3D.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Menu3D.cpp' object='libSPINwrappers_la-Menu3D.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-Menu3D.lo `test -f 'Menu3D.cpp' || echo '$(srcdir)/'`Menu3D.cpp

libSPINwrappers_la-ModelNode.lo: ModelNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-ModelNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-ModelNode.Tpo -c -o libSPINwrappers_la-ModelNode.lo `test -f 'ModelNode.cpp' || echo '$(srcdir)/'`ModelNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-ModelNode.Tpo $(DEPDIR)/libSPINwrappers_la-ModelNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ModelNode.cpp' object='libSPINwrappers_la-ModelNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-ModelNode.lo `test -f 'ModelNode.cpp' || echo '$(srcdir)/'`ModelNode.cpp

libSPINwrappers_la-ParticleSystem.lo: ParticleSystem.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-ParticleSystem.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-ParticleSystem.Tpo -c -o libSPINwrappers_la-ParticleSystem.lo `test -f 'ParticleSystem.cpp' || echo '$(srcdir)/'`ParticleSystem.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-ParticleSystem.Tpo $(DEPDIR)/libSPINwrappers_la-ParticleSystem.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParticleSystem.cpp' object='libSPINwrappers_la-ParticleSystem.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-ParticleSystem.lo `test -f 'ParticleSystem.cpp' || echo '$(srcdir)/'`ParticleSystem.cpp

libSPINwrappers_la-PointerNode.lo: PointerNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-PointerNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-PointerNode.Tpo -c -o libSPINwrappers_la-PointerNode.lo `test -f 'PointerNode.cpp' || echo '$(srcdir)/'`PointerNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-PointerNode.Tpo $(DEPDIR)/libSPINwrappers_la-PointerNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PointerNode.cpp' object='libSPINwrappers_la-PointerNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-PointerNode.lo `test -f 'PointerNode.cpp' || echo '$(srcdir)/'`PointerNode.cpp

libSPINwrappers_la-RayNode.lo: RayNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-RayNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-RayNode.Tpo -c -o libSPINwrappers_la-RayNode.lo `test -f 'RayNode.cpp' || echo '$(srcdir)/'`RayNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-RayNode.Tpo $(DEPDIR)/libSPINwrappers_la-RayNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RayNode.cpp' object='libSPINwrappers_la-RayNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-RayNode.lo `test -f 'RayNode.cpp' || echo '$(srcdir)/'`RayNode.cpp

libSPINwrappers_la-ReferencedNode.lo: ReferencedNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-ReferencedNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-ReferencedNode.Tpo -c -o libSPINwrappers_la-ReferencedNode.lo `test -f 'ReferencedNode.cpp' || echo '$(srcdir)/'`ReferencedNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-ReferencedNode.Tpo $(DEPDIR)/libSPINwrappers_la-ReferencedNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ReferencedNode.cpp' object='libSPINwrappers_la-ReferencedNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-ReferencedNode.lo `test -f 'ReferencedNode.cpp' || echo '$(srcdir)/'`ReferencedNode.cpp

libSPINwrappers_la-ReferencedStateSet.lo: ReferencedStateSet.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-ReferencedStateSet.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-ReferencedStateSet.Tpo -c -o libSPINwrappers_la-ReferencedStateSet.lo `test -f 'ReferencedStateSet.cpp' || echo '$(srcdir)/'`ReferencedStateSet.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-ReferencedStateSet.Tpo $(DEPDIR)/libSPINwrappers_la-ReferencedStateSet.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ReferencedStateSet.cpp' object='libSPINwrappers_la-ReferencedStateSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-ReferencedStateSet.lo `test -f 'ReferencedStateSet.cpp' || echo '$(srcdir)/'`ReferencedStateSet.cpp

libSPINwrappers_la-ReporterNode.lo: ReporterNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-ReporterNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-ReporterNode.Tpo -c -o libSPINwrappers_la-ReporterNode.lo `test -f 'ReporterNode.cpp' || echo '$(srcdir)/'`ReporterNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-ReporterNode.Tpo $(DEPDIR)/libSPINwrappers_la-ReporterNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ReporterNode.cpp' object='libSPINwrappers_la-ReporterNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-ReporterNode.lo `test -f 'ReporterNode.cpp' || echo '$(srcdir)/'`ReporterNode.cpp

libSPINwrappers_la-Shader.lo: Shader.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-Shader.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-Shader.Tpo -c -o libSPINwrappers_la-Shader.lo `test -f 'Shader.cpp' || echo '$(srcdir)/'`Shader.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-Shader.Tpo $(DEPDIR)/libSPINwrappers_la-Shader.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Shader.cpp' object='libSPINwrappers_la-Shader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-Shader.lo `test -f 'Shader.cpp' || echo '$(srcdir)/'`Shader.cpp

libSPINwrappers_la-ShapeNode.lo: ShapeNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-ShapeNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-ShapeNode.Tpo -c -o libSPINwrappers_la-ShapeNode.lo `test -f 'ShapeNode.cpp' || echo '$(srcdir)/'`ShapeNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-ShapeNode.Tpo $(DEPDIR)/libSPINwrappers_la-ShapeNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ShapeNode.cpp' object='libSPINwrappers_la-ShapeNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-ShapeNode.lo `test -f 'ShapeNode.cpp' || echo '$(srcdir)/'`ShapeNode.cpp

libSPINwrappers_la-SharedVideoTexture.lo: SharedVideoTexture.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-SharedVideoTexture.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-SharedVideoTexture.Tpo -c -o libSPINwrappers_la-SharedVideoTexture.lo `test -f 'SharedVideoTexture.cpp' || echo '$(srcdir)/'`SharedVideoTexture.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-SharedVideoTexture.Tpo $(DEPDIR)/libSPINwrappers_la-SharedVideoTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SharedVideoTexture.cpp' object='libSPINwrappers_la-SharedVideoTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-SharedVideoTexture.lo `test -f 'SharedVideoTexture.cpp' || echo '$(srcdir)/'`SharedVideoTexture.cpp

libSPINwrappers_la-SoundConnection.lo: SoundConnection.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-SoundConnection.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-SoundConnection.Tpo -c -o libSPINwrappers_la-SoundConnection.lo `test -f 'SoundConnection.cpp' || echo '$(srcdir)/'`SoundConnection.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-SoundConnection.Tpo $(DEPDIR)/libSPINwrappers_la-SoundConnection.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SoundConnection.cpp' object='libSPINwrappers_la-SoundConnection.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-SoundConnection.lo `test -f 'SoundConnection.cpp' || echo '$(srcdir)/'`SoundConnection.cpp

libSPINwrappers_la-SoundNode.lo: SoundNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-SoundNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-SoundNode.Tpo -c -o libSPINwrappers_la-SoundNode.lo `test -f 'SoundNode.cpp' || echo '$(srcdir)/'`SoundNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-SoundNode.Tpo $(DEPDIR)/libSPINwrappers_la-SoundNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SoundNode.cpp' object='libSPINwrappers_la-SoundNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-SoundNode.lo `test -f 'SoundNode.cpp' || echo '$(srcdir)/'`SoundNode.cpp

libSPINwrappers_la-SoundSpace.lo: SoundSpace.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-SoundSpace.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-SoundSpace.Tpo -c -o libSPINwrappers_la-SoundSpace.lo `test -f 'SoundSpace.cpp' || echo '$(srcdir)/'`SoundSpace.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-SoundSpace.Tpo $(DEPDIR)/libSPINwrappers_la-SoundSpace.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SoundSpace.cpp' object='libSPINwrappers_la-SoundSpace.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-SoundSpace.lo `test -f 'SoundSpace.cpp' || echo '$(srcdir)/'`SoundSpace.cpp

libSPINwrappers_la-SwitchNode.lo: SwitchNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-SwitchNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-SwitchNode.Tpo -c -o libSPINwrappers_la-SwitchNode.lo `test -f 'SwitchNode.cpp' || echo '$(srcdir)/'`SwitchNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-SwitchNode.Tpo $(DEPDIR)/libSPINwrappers_la-SwitchNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SwitchNode.cpp' object='libSPINwrappers_la-SwitchNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-SwitchNode.lo `test -f 'SwitchNode.cpp' || echo '$(srcdir)/'`SwitchNode.cpp

libSPINwrappers_la-TextNode.lo: TextNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-TextNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-TextNode.Tpo -c -o libSPINwrappers_la-TextNode.lo `test -f 'TextNode.cpp' || echo '$(srcdir)/'`TextNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-TextNode.Tpo $(DEPDIR)/libSPINwrappers_la-TextNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextNode.cpp' object='libSPINwrappers_la-TextNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-TextNode.lo `test -f 'TextNode.cpp' || echo '$(srcdir)/'`TextNode.cpp

libSPINwrappers_la-UserNode.lo: UserNode.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-UserNode.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-UserNode.Tpo -c -o libSPINwrappers_la-UserNode.lo `test -f 'UserNode.cpp' || echo '$(srcdir)/'`UserNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-UserNode.Tpo $(DEPDIR)/libSPINwrappers_la-UserNode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UserNode.cpp' object='libSPINwrappers_la-UserNode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-UserNode.lo `test -f 'UserNode.cpp' || echo '$(srcdir)/'`UserNode.cpp

libSPINwrappers_la-VideoTexture.lo: VideoTexture.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libSPINwrappers_la-VideoTexture.lo -MD -MP -MF $(DEPDIR)/libSPINwrappers_la-VideoTexture.Tpo -c -o libSPINwrappers_la-VideoTexture.lo `test -f 'VideoTexture.cpp' || echo '$(srcdir)/'`VideoTexture.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libSPINwrappers_la-VideoTexture.Tpo $(DEPDIR)/libSPINwrappers_la-VideoTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VideoTexture.cpp' object='libSPINwrappers_la-VideoTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libSPINwrappers_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libSPINwrappers_la-VideoTexture.lo `test -f 'VideoTexture.cpp' || echo '$(srcdir)/'`VideoTexture.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am


# TODO: Could be nice to regenerate the wrapper every time a source file from src/spin changes:
# FIXME: These depend on the headers, and more specifically, each generated wrapper should only depend on one header
#$(BUILT_SOURCES):
#	-rm -f $(top_srcdir)/include/*.h~
#	cd $(top_srcdir) && src/genwrapper/genwrapper -d . doxygen | doxygen - && cd -
#	cd $(top_srcdir) && src/genwrapper/genwrapper -v QUIET -c genwrapper.conf doxygen . && cd -

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
