// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <cppintrospection/ReflectionMacros>
#include <cppintrospection/TypedMethodInfo>
#include <cppintrospection/StaticMethodInfo>
#include <cppintrospection/Attributes>

#include <ParticleSystem.h>
#include <SceneManager.h>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(spin::ParticleSystem)
	I_DeclaringFile("ParticleSystem.h");
	I_BaseType(spin::GroupNode);
	I_Constructor2(IN, spin::SceneManager *, sceneManager, IN, char *, initID,
	               ____ParticleSystem__SceneManager_P1__char_P1,
	               "",
	               "");
	I_Method1(void, setEmissive, IN, int, emissiveFlag,
	          Properties::NON_VIRTUAL,
	          __void__setEmissive__int,
	          "",
	          "");
	I_Method0(int, getEmissive,
	          Properties::NON_VIRTUAL,
	          __int__getEmissive,
	          "",
	          "");
	I_Method1(void, setLighting, IN, int, lightingFlag,
	          Properties::NON_VIRTUAL,
	          __void__setLighting__int,
	          "",
	          "");
	I_Method0(int, getLighting,
	          Properties::NON_VIRTUAL,
	          __int__getLighting,
	          "",
	          "");
	I_Method1(void, setImagePath, IN, const char *, path,
	          Properties::NON_VIRTUAL,
	          __void__setImagePath__C5_char_P1,
	          "",
	          "");
	I_Method0(const char *, getImagePath,
	          Properties::NON_VIRTUAL,
	          __C5_char_P1__getImagePath,
	          "",
	          "");
	I_Method2(void, setRate, IN, float, min, IN, float, max,
	          Properties::NON_VIRTUAL,
	          __void__setRate__float__float,
	          "",
	          "");
	I_Method0(osg::Vec2, getRate,
	          Properties::NON_VIRTUAL,
	          __osg_Vec2__getRate,
	          "",
	          "");
	I_Method0(std::vector< lo_message >, getState,
	          Properties::VIRTUAL,
	          __std_vectorT1_lo_message___getState,
	          "",
	          "For each subclass of ReferencedNode, we override the getState() method to fill the vector with the correct set of methods for this particular node ");
	I_SimpleProperty(int, Emissive, 
	                 __int__getEmissive, 
	                 __void__setEmissive__int);
	I_SimpleProperty(const char *, ImagePath, 
	                 __C5_char_P1__getImagePath, 
	                 __void__setImagePath__C5_char_P1);
	I_SimpleProperty(int, Lighting, 
	                 __int__getLighting, 
	                 __void__setLighting__int);
	I_SimpleProperty(osg::Vec2, Rate, 
	                 __osg_Vec2__getRate, 
	                 0);
	I_SimpleProperty(std::vector< lo_message >, State, 
	                 __std_vectorT1_lo_message___getState, 
	                 0);
END_REFLECTOR

